name: Release application

on:
  push:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: wiz-gke-lab-prod
  GKE_ZONE: us-east1
  IMAGE: simple-web

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, Configure kubectl, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GKE_PROJECT }}
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          export_default_credentials: true

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker
      # Get the GKE credentials so we can deploy to the cluster
      - run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" \
            .
      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"

      # Set up kustomize
      # - name: Set up Kustomize
      #   uses: imranismail/setup-kustomize@v1
      # Configure kubectl
      - name: Configure kubectl
        run: |-
        gcloud config set project $PROJECT_ID
        gcloud config set compute/zone $GKE_ZONE
        gcloud container clusters get-credentials $GKE_CLUSTER

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          kubectl apply -f manifests/deployments,yaml -f manifests/service.yaml
          kubectl rollout status deployment $IMAGE
          kubectl get services -o wide
